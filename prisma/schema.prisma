// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// POSTGRESQL START COMMAND: psql -U postgres -h localhost -p 5432 -d pottedplant -- this starts postgresql on port 5432 with the default user postgres and database pottedplant

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  ownedItems    OwnedItem[]
  subscriptions Subscription[]
  media         Media[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


// Custom types

// Media Types
// 1. Book
// 2. Video
// 3. Sticker (PNG/SVG)
// 4. Pack (Collection of Stickers or Videos)
// 5. Other
model OwnedItem {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  mediaType String
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String
}

model Subscription {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String
}

model Media {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  mediaType String
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String
}

// example of PostgresSQL database for Prisma
// create db
// CREATE DATABASE pottedplant;
// create tables
// CREATE TABLE users (id SERIAL PRIMARY KEY, name VARCHAR(255), email VARCHAR(255), emailVerified TIMESTAMP, image VARCHAR(255), "createdAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, "updatedAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP);
// CREATE TABLE items (id SERIAL PRIMARY KEY, name VARCHAR(255), description VARCHAR(255), price INTEGER, "userId" INTEGER REFERENCES users(id));
// insert data
